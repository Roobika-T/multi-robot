// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: proto/v1/fleet_manager/fleet_manager.proto

package fleet_manager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Command stream service
type CommandStreamCommands int32

const (
	CommandStreamCommands_COMMAND_STREAM_UNKNOWN CommandStreamCommands = 0
	CommandStreamCommands_FLOW_EXECUTE           CommandStreamCommands = 1
	CommandStreamCommands_FLOW_CANCEL            CommandStreamCommands = 2
	CommandStreamCommands_ROBOT_LIST             CommandStreamCommands = 3
	CommandStreamCommands_GET_CONFIGS            CommandStreamCommands = 4
	CommandStreamCommands_NAVIGATION             CommandStreamCommands = 5
	CommandStreamCommands_TRIGGER                CommandStreamCommands = 6
	CommandStreamCommands_BLOCK                  CommandStreamCommands = 7
	CommandStreamCommands_UPDATE_CONFIG          CommandStreamCommands = 8
	CommandStreamCommands_LOCALIZATION           CommandStreamCommands = 9
	CommandStreamCommands_MAP                    CommandStreamCommands = 10
	CommandStreamCommands_LANE                   CommandStreamCommands = 11
	CommandStreamCommands_SETTINGS               CommandStreamCommands = 12
)

// Enum value maps for CommandStreamCommands.
var (
	CommandStreamCommands_name = map[int32]string{
		0:  "COMMAND_STREAM_UNKNOWN",
		1:  "FLOW_EXECUTE",
		2:  "FLOW_CANCEL",
		3:  "ROBOT_LIST",
		4:  "GET_CONFIGS",
		5:  "NAVIGATION",
		6:  "TRIGGER",
		7:  "BLOCK",
		8:  "UPDATE_CONFIG",
		9:  "LOCALIZATION",
		10: "MAP",
		11: "LANE",
		12: "SETTINGS",
	}
	CommandStreamCommands_value = map[string]int32{
		"COMMAND_STREAM_UNKNOWN": 0,
		"FLOW_EXECUTE":           1,
		"FLOW_CANCEL":            2,
		"ROBOT_LIST":             3,
		"GET_CONFIGS":            4,
		"NAVIGATION":             5,
		"TRIGGER":                6,
		"BLOCK":                  7,
		"UPDATE_CONFIG":          8,
		"LOCALIZATION":           9,
		"MAP":                    10,
		"LANE":                   11,
		"SETTINGS":               12,
	}
)

func (x CommandStreamCommands) Enum() *CommandStreamCommands {
	p := new(CommandStreamCommands)
	*p = x
	return p
}

func (x CommandStreamCommands) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandStreamCommands) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes[0].Descriptor()
}

func (CommandStreamCommands) Type() protoreflect.EnumType {
	return &file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes[0]
}

func (x CommandStreamCommands) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandStreamCommands.Descriptor instead.
func (CommandStreamCommands) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{0}
}

type CommandStreamActions int32

const (
	CommandStreamActions_COMMAND_ACTION_UNKNOWN CommandStreamActions = 0
	CommandStreamActions_CANCEL_GOAL            CommandStreamActions = 1
	CommandStreamActions_SEND_GOAL              CommandStreamActions = 2
	CommandStreamActions_HOME                   CommandStreamActions = 3
	CommandStreamActions_CHARGER                CommandStreamActions = 4
	CommandStreamActions_GOAT_RESPONSE          CommandStreamActions = 5
	CommandStreamActions_PAUSE_GOAL             CommandStreamActions = 6
	CommandStreamActions_RESUME_GOAL            CommandStreamActions = 7
	CommandStreamActions_BLOCK_ROBOT            CommandStreamActions = 8
	CommandStreamActions_UNBLOCK_ROBOT          CommandStreamActions = 9
	CommandStreamActions_SWITCH_MAP             CommandStreamActions = 10
	CommandStreamActions_UPDATE_MAP             CommandStreamActions = 11
	CommandStreamActions_GET_MAP                CommandStreamActions = 12
	CommandStreamActions_BLOCK_LANE             CommandStreamActions = 13
	CommandStreamActions_UNBLOCK_LANE           CommandStreamActions = 14
	CommandStreamActions_UPDATE_SPEED           CommandStreamActions = 15
	CommandStreamActions_RESET_SPEED            CommandStreamActions = 16
	CommandStreamActions_UPDATE_VOLUME          CommandStreamActions = 17
	CommandStreamActions_UPDATE_GOAL            CommandStreamActions = 18
	CommandStreamActions_UPDATE_NAVIGATION      CommandStreamActions = 19
	CommandStreamActions_UPDATE_CUSTOM_TASK     CommandStreamActions = 20
)

// Enum value maps for CommandStreamActions.
var (
	CommandStreamActions_name = map[int32]string{
		0:  "COMMAND_ACTION_UNKNOWN",
		1:  "CANCEL_GOAL",
		2:  "SEND_GOAL",
		3:  "HOME",
		4:  "CHARGER",
		5:  "GOAT_RESPONSE",
		6:  "PAUSE_GOAL",
		7:  "RESUME_GOAL",
		8:  "BLOCK_ROBOT",
		9:  "UNBLOCK_ROBOT",
		10: "SWITCH_MAP",
		11: "UPDATE_MAP",
		12: "GET_MAP",
		13: "BLOCK_LANE",
		14: "UNBLOCK_LANE",
		15: "UPDATE_SPEED",
		16: "RESET_SPEED",
		17: "UPDATE_VOLUME",
		18: "UPDATE_GOAL",
		19: "UPDATE_NAVIGATION",
		20: "UPDATE_CUSTOM_TASK",
	}
	CommandStreamActions_value = map[string]int32{
		"COMMAND_ACTION_UNKNOWN": 0,
		"CANCEL_GOAL":            1,
		"SEND_GOAL":              2,
		"HOME":                   3,
		"CHARGER":                4,
		"GOAT_RESPONSE":          5,
		"PAUSE_GOAL":             6,
		"RESUME_GOAL":            7,
		"BLOCK_ROBOT":            8,
		"UNBLOCK_ROBOT":          9,
		"SWITCH_MAP":             10,
		"UPDATE_MAP":             11,
		"GET_MAP":                12,
		"BLOCK_LANE":             13,
		"UNBLOCK_LANE":           14,
		"UPDATE_SPEED":           15,
		"RESET_SPEED":            16,
		"UPDATE_VOLUME":          17,
		"UPDATE_GOAL":            18,
		"UPDATE_NAVIGATION":      19,
		"UPDATE_CUSTOM_TASK":     20,
	}
)

func (x CommandStreamActions) Enum() *CommandStreamActions {
	p := new(CommandStreamActions)
	*p = x
	return p
}

func (x CommandStreamActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandStreamActions) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes[1].Descriptor()
}

func (CommandStreamActions) Type() protoreflect.EnumType {
	return &file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes[1]
}

func (x CommandStreamActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandStreamActions.Descriptor instead.
func (CommandStreamActions) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{1}
}

// Herd Service
type HerdActions int32

const (
	HerdActions_HERD_ACTION_UNKNOWN HerdActions = 0
	HerdActions_CREATE              HerdActions = 1
	HerdActions_UPDATE              HerdActions = 2
	HerdActions_DELETE              HerdActions = 3
	HerdActions_START               HerdActions = 4
	HerdActions_STOP                HerdActions = 5
	HerdActions_RESTART             HerdActions = 6
)

// Enum value maps for HerdActions.
var (
	HerdActions_name = map[int32]string{
		0: "HERD_ACTION_UNKNOWN",
		1: "CREATE",
		2: "UPDATE",
		3: "DELETE",
		4: "START",
		5: "STOP",
		6: "RESTART",
	}
	HerdActions_value = map[string]int32{
		"HERD_ACTION_UNKNOWN": 0,
		"CREATE":              1,
		"UPDATE":              2,
		"DELETE":              3,
		"START":               4,
		"STOP":                5,
		"RESTART":             6,
	}
)

func (x HerdActions) Enum() *HerdActions {
	p := new(HerdActions)
	*p = x
	return p
}

func (x HerdActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HerdActions) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes[2].Descriptor()
}

func (HerdActions) Type() protoreflect.EnumType {
	return &file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes[2]
}

func (x HerdActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HerdActions.Descriptor instead.
func (HerdActions) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{2}
}

// HerdIQ Telemetry (fleet states, dispatch states)
type HerdTelemetryActions int32

const (
	HerdTelemetryActions_HERD_TELEMETRY_UNKNOWN HerdTelemetryActions = 0
	HerdTelemetryActions_FLEET_STATES           HerdTelemetryActions = 1
	HerdTelemetryActions_DISAPTCH_STATES        HerdTelemetryActions = 2
)

// Enum value maps for HerdTelemetryActions.
var (
	HerdTelemetryActions_name = map[int32]string{
		0: "HERD_TELEMETRY_UNKNOWN",
		1: "FLEET_STATES",
		2: "DISAPTCH_STATES",
	}
	HerdTelemetryActions_value = map[string]int32{
		"HERD_TELEMETRY_UNKNOWN": 0,
		"FLEET_STATES":           1,
		"DISAPTCH_STATES":        2,
	}
)

func (x HerdTelemetryActions) Enum() *HerdTelemetryActions {
	p := new(HerdTelemetryActions)
	*p = x
	return p
}

func (x HerdTelemetryActions) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HerdTelemetryActions) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes[3].Descriptor()
}

func (HerdTelemetryActions) Type() protoreflect.EnumType {
	return &file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes[3]
}

func (x HerdTelemetryActions) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HerdTelemetryActions.Descriptor instead.
func (HerdTelemetryActions) EnumDescriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{3}
}

type CommandSteamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Command       CommandStreamCommands  `protobuf:"varint,2,opt,name=command,proto3,enum=v1.fleet_manager.CommandStreamCommands" json:"command,omitempty"`
	Action        CommandStreamActions   `protobuf:"varint,3,opt,name=action,proto3,enum=v1.fleet_manager.CommandStreamActions" json:"action,omitempty"`
	DeviceId      string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Robot         string                 `protobuf:"bytes,5,opt,name=robot,proto3" json:"robot,omitempty"`
	Data          string                 `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Status        bool                   `protobuf:"varint,7,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`
	RequestId     string                 `protobuf:"bytes,9,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Organization  string                 `protobuf:"bytes,10,opt,name=organization,proto3" json:"organization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandSteamRequest) Reset() {
	*x = CommandSteamRequest{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandSteamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandSteamRequest) ProtoMessage() {}

func (x *CommandSteamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandSteamRequest.ProtoReflect.Descriptor instead.
func (*CommandSteamRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{0}
}

func (x *CommandSteamRequest) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *CommandSteamRequest) GetCommand() CommandStreamCommands {
	if x != nil {
		return x.Command
	}
	return CommandStreamCommands_COMMAND_STREAM_UNKNOWN
}

func (x *CommandSteamRequest) GetAction() CommandStreamActions {
	if x != nil {
		return x.Action
	}
	return CommandStreamActions_COMMAND_ACTION_UNKNOWN
}

func (x *CommandSteamRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CommandSteamRequest) GetRobot() string {
	if x != nil {
		return x.Robot
	}
	return ""
}

func (x *CommandSteamRequest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CommandSteamRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CommandSteamRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommandSteamRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CommandSteamRequest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

type CommandSteamRespose struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Command       CommandStreamCommands  `protobuf:"varint,2,opt,name=command,proto3,enum=v1.fleet_manager.CommandStreamCommands" json:"command,omitempty"`
	Action        CommandStreamActions   `protobuf:"varint,3,opt,name=action,proto3,enum=v1.fleet_manager.CommandStreamActions" json:"action,omitempty"`
	Status        bool                   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Robot         string                 `protobuf:"bytes,6,opt,name=robot,proto3" json:"robot,omitempty"`
	DeviceId      string                 `protobuf:"bytes,7,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Data          string                 `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
	RequestId     string                 `protobuf:"bytes,9,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Organization  string                 `protobuf:"bytes,10,opt,name=organization,proto3" json:"organization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandSteamRespose) Reset() {
	*x = CommandSteamRespose{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandSteamRespose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandSteamRespose) ProtoMessage() {}

func (x *CommandSteamRespose) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandSteamRespose.ProtoReflect.Descriptor instead.
func (*CommandSteamRespose) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{1}
}

func (x *CommandSteamRespose) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *CommandSteamRespose) GetCommand() CommandStreamCommands {
	if x != nil {
		return x.Command
	}
	return CommandStreamCommands_COMMAND_STREAM_UNKNOWN
}

func (x *CommandSteamRespose) GetAction() CommandStreamActions {
	if x != nil {
		return x.Action
	}
	return CommandStreamActions_COMMAND_ACTION_UNKNOWN
}

func (x *CommandSteamRespose) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *CommandSteamRespose) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommandSteamRespose) GetRobot() string {
	if x != nil {
		return x.Robot
	}
	return ""
}

func (x *CommandSteamRespose) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *CommandSteamRespose) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *CommandSteamRespose) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CommandSteamRespose) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

type HerdData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Organization  string                 `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	Token         string                 `protobuf:"bytes,3,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HerdData) Reset() {
	*x = HerdData{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HerdData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HerdData) ProtoMessage() {}

func (x *HerdData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HerdData.ProtoReflect.Descriptor instead.
func (*HerdData) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{2}
}

func (x *HerdData) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *HerdData) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *HerdData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type HerdServiceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Action        HerdActions            `protobuf:"varint,1,opt,name=action,proto3,enum=v1.fleet_manager.HerdActions" json:"action,omitempty"`
	DeviceId      string                 `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Data          *HerdData              `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HerdServiceRequest) Reset() {
	*x = HerdServiceRequest{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HerdServiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HerdServiceRequest) ProtoMessage() {}

func (x *HerdServiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HerdServiceRequest.ProtoReflect.Descriptor instead.
func (*HerdServiceRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{3}
}

func (x *HerdServiceRequest) GetAction() HerdActions {
	if x != nil {
		return x.Action
	}
	return HerdActions_HERD_ACTION_UNKNOWN
}

func (x *HerdServiceRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *HerdServiceRequest) GetData() *HerdData {
	if x != nil {
		return x.Data
	}
	return nil
}

type HerdServiceResponseData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Token         string                 `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HerdServiceResponseData) Reset() {
	*x = HerdServiceResponseData{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HerdServiceResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HerdServiceResponseData) ProtoMessage() {}

func (x *HerdServiceResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HerdServiceResponseData.ProtoReflect.Descriptor instead.
func (*HerdServiceResponseData) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{4}
}

func (x *HerdServiceResponseData) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *HerdServiceResponseData) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type HerdServiceResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Status        bool                     `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data          *HerdServiceResponseData `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message       string                   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HerdServiceResponse) Reset() {
	*x = HerdServiceResponse{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HerdServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HerdServiceResponse) ProtoMessage() {}

func (x *HerdServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HerdServiceResponse.ProtoReflect.Descriptor instead.
func (*HerdServiceResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{5}
}

func (x *HerdServiceResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *HerdServiceResponse) GetData() *HerdServiceResponseData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *HerdServiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// RobotTelemetry service
type RobotTelemetryData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Robot         string                 `protobuf:"bytes,3,opt,name=robot,proto3" json:"robot,omitempty"`
	DeviceId      string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Data          string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotTelemetryData) Reset() {
	*x = RobotTelemetryData{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotTelemetryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotTelemetryData) ProtoMessage() {}

func (x *RobotTelemetryData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotTelemetryData.ProtoReflect.Descriptor instead.
func (*RobotTelemetryData) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{6}
}

func (x *RobotTelemetryData) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *RobotTelemetryData) GetRobot() string {
	if x != nil {
		return x.Robot
	}
	return ""
}

func (x *RobotTelemetryData) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RobotTelemetryData) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type RobotTelemetryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Robot         string                 `protobuf:"bytes,3,opt,name=robot,proto3" json:"robot,omitempty"`
	DeviceId      string                 `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	Data          string                 `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	Status        bool                   `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,7,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RobotTelemetryResponse) Reset() {
	*x = RobotTelemetryResponse{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RobotTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RobotTelemetryResponse) ProtoMessage() {}

func (x *RobotTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RobotTelemetryResponse.ProtoReflect.Descriptor instead.
func (*RobotTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{7}
}

func (x *RobotTelemetryResponse) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *RobotTelemetryResponse) GetRobot() string {
	if x != nil {
		return x.Robot
	}
	return ""
}

func (x *RobotTelemetryResponse) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *RobotTelemetryResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *RobotTelemetryResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *RobotTelemetryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HerdTelemetryReqest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Action        HerdTelemetryActions   `protobuf:"varint,2,opt,name=action,proto3,enum=v1.fleet_manager.HerdTelemetryActions" json:"action,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Organization  string                 `protobuf:"bytes,4,opt,name=organization,proto3" json:"organization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HerdTelemetryReqest) Reset() {
	*x = HerdTelemetryReqest{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HerdTelemetryReqest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HerdTelemetryReqest) ProtoMessage() {}

func (x *HerdTelemetryReqest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HerdTelemetryReqest.ProtoReflect.Descriptor instead.
func (*HerdTelemetryReqest) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{8}
}

func (x *HerdTelemetryReqest) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *HerdTelemetryReqest) GetAction() HerdTelemetryActions {
	if x != nil {
		return x.Action
	}
	return HerdTelemetryActions_HERD_TELEMETRY_UNKNOWN
}

func (x *HerdTelemetryReqest) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *HerdTelemetryReqest) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

type HerdTelemetryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Action        HerdTelemetryActions   `protobuf:"varint,2,opt,name=action,proto3,enum=v1.fleet_manager.HerdTelemetryActions" json:"action,omitempty"`
	Data          string                 `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Status        bool                   `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`
	Organization  string                 `protobuf:"bytes,6,opt,name=organization,proto3" json:"organization,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HerdTelemetryResponse) Reset() {
	*x = HerdTelemetryResponse{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HerdTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HerdTelemetryResponse) ProtoMessage() {}

func (x *HerdTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HerdTelemetryResponse.ProtoReflect.Descriptor instead.
func (*HerdTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{9}
}

func (x *HerdTelemetryResponse) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *HerdTelemetryResponse) GetAction() HerdTelemetryActions {
	if x != nil {
		return x.Action
	}
	return HerdTelemetryActions_HERD_TELEMETRY_UNKNOWN
}

func (x *HerdTelemetryResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

func (x *HerdTelemetryResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *HerdTelemetryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HerdTelemetryResponse) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

// Navigation telemetry stream
type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Status        bool                   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{10}
}

func (x *HealthCheckRequest) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *HealthCheckRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *HealthCheckRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Status        bool                   `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{11}
}

func (x *HealthCheckResponse) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *HealthCheckResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Docker stats telemetry stream
type DockerTelemetryData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Cpu           float64                `protobuf:"fixed64,1,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Memory        float64                `protobuf:"fixed64,2,opt,name=memory,proto3" json:"memory,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ContainerId   string                 `protobuf:"bytes,4,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	NumOfProcs    uint64                 `protobuf:"varint,6,opt,name=num_of_procs,json=numOfProcs,proto3" json:"num_of_procs,omitempty"`
	CurrentPid    uint64                 `protobuf:"varint,7,opt,name=current_pid,json=currentPid,proto3" json:"current_pid,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Version       string                 `protobuf:"bytes,11,opt,name=version,proto3" json:"version,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerTelemetryData) Reset() {
	*x = DockerTelemetryData{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerTelemetryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerTelemetryData) ProtoMessage() {}

func (x *DockerTelemetryData) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerTelemetryData.ProtoReflect.Descriptor instead.
func (*DockerTelemetryData) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{12}
}

func (x *DockerTelemetryData) GetCpu() float64 {
	if x != nil {
		return x.Cpu
	}
	return 0
}

func (x *DockerTelemetryData) GetMemory() float64 {
	if x != nil {
		return x.Memory
	}
	return 0
}

func (x *DockerTelemetryData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DockerTelemetryData) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *DockerTelemetryData) GetNumOfProcs() uint64 {
	if x != nil {
		return x.NumOfProcs
	}
	return 0
}

func (x *DockerTelemetryData) GetCurrentPid() uint64 {
	if x != nil {
		return x.CurrentPid
	}
	return 0
}

func (x *DockerTelemetryData) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *DockerTelemetryData) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *DockerTelemetryData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type DockerTelemetryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Status        bool                   `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerTelemetryRequest) Reset() {
	*x = DockerTelemetryRequest{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerTelemetryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerTelemetryRequest) ProtoMessage() {}

func (x *DockerTelemetryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerTelemetryRequest.ProtoReflect.Descriptor instead.
func (*DockerTelemetryRequest) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{13}
}

func (x *DockerTelemetryRequest) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *DockerTelemetryRequest) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DockerTelemetryRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DockerTelemetryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SlugName      string                 `protobuf:"bytes,1,opt,name=slug_name,json=slugName,proto3" json:"slug_name,omitempty"`
	Data          *DockerTelemetryData   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Status        bool                   `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DockerTelemetryResponse) Reset() {
	*x = DockerTelemetryResponse{}
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DockerTelemetryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DockerTelemetryResponse) ProtoMessage() {}

func (x *DockerTelemetryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DockerTelemetryResponse.ProtoReflect.Descriptor instead.
func (*DockerTelemetryResponse) Descriptor() ([]byte, []int) {
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP(), []int{14}
}

func (x *DockerTelemetryResponse) GetSlugName() string {
	if x != nil {
		return x.SlugName
	}
	return ""
}

func (x *DockerTelemetryResponse) GetData() *DockerTelemetryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DockerTelemetryResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *DockerTelemetryResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_proto_v1_fleet_manager_fleet_manager_proto protoreflect.FileDescriptor

const file_proto_v1_fleet_manager_fleet_manager_proto_rawDesc = "" +
	"\n" +
	"*proto/v1/fleet_manager/fleet_manager.proto\x12\x10v1.fleet_manager\"\xf1\x02\n" +
	"\x13CommandSteamRequest\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12A\n" +
	"\acommand\x18\x02 \x01(\x0e2'.v1.fleet_manager.CommandStreamCommandsR\acommand\x12>\n" +
	"\x06action\x18\x03 \x01(\x0e2&.v1.fleet_manager.CommandStreamActionsR\x06action\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x14\n" +
	"\x05robot\x18\x05 \x01(\tR\x05robot\x12\x12\n" +
	"\x04data\x18\x06 \x01(\tR\x04data\x12\x16\n" +
	"\x06status\x18\a \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\b \x01(\tR\amessage\x12\x1d\n" +
	"\n" +
	"request_id\x18\t \x01(\tR\trequestId\x12\"\n" +
	"\forganization\x18\n" +
	" \x01(\tR\forganization\"\xf1\x02\n" +
	"\x13CommandSteamRespose\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12A\n" +
	"\acommand\x18\x02 \x01(\x0e2'.v1.fleet_manager.CommandStreamCommandsR\acommand\x12>\n" +
	"\x06action\x18\x03 \x01(\x0e2&.v1.fleet_manager.CommandStreamActionsR\x06action\x12\x16\n" +
	"\x06status\x18\x04 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12\x14\n" +
	"\x05robot\x18\x06 \x01(\tR\x05robot\x12\x1b\n" +
	"\tdevice_id\x18\a \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04data\x18\b \x01(\tR\x04data\x12\x1d\n" +
	"\n" +
	"request_id\x18\t \x01(\tR\trequestId\x12\"\n" +
	"\forganization\x18\n" +
	" \x01(\tR\forganization\"a\n" +
	"\bHerdData\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12\"\n" +
	"\forganization\x18\x02 \x01(\tR\forganization\x12\x14\n" +
	"\x05token\x18\x03 \x01(\tR\x05token\"\x98\x01\n" +
	"\x12HerdServiceRequest\x125\n" +
	"\x06action\x18\x01 \x01(\x0e2\x1d.v1.fleet_manager.HerdActionsR\x06action\x12\x1b\n" +
	"\tdevice_id\x18\x02 \x01(\tR\bdeviceId\x12.\n" +
	"\x04data\x18\x03 \x01(\v2\x1a.v1.fleet_manager.HerdDataR\x04data\"L\n" +
	"\x17HerdServiceResponseData\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12\x14\n" +
	"\x05token\x18\x02 \x01(\tR\x05token\"\x86\x01\n" +
	"\x13HerdServiceResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\bR\x06status\x12=\n" +
	"\x04data\x18\x02 \x01(\v2).v1.fleet_manager.HerdServiceResponseDataR\x04data\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"x\n" +
	"\x12RobotTelemetryData\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12\x14\n" +
	"\x05robot\x18\x03 \x01(\tR\x05robot\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04data\x18\x05 \x01(\tR\x04data\"\xae\x01\n" +
	"\x16RobotTelemetryResponse\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12\x14\n" +
	"\x05robot\x18\x03 \x01(\tR\x05robot\x12\x1b\n" +
	"\tdevice_id\x18\x04 \x01(\tR\bdeviceId\x12\x12\n" +
	"\x04data\x18\x05 \x01(\tR\x04data\x12\x16\n" +
	"\x06status\x18\x06 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\a \x01(\tR\amessage\"\xaa\x01\n" +
	"\x13HerdTelemetryReqest\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12>\n" +
	"\x06action\x18\x02 \x01(\x0e2&.v1.fleet_manager.HerdTelemetryActionsR\x06action\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\x12\"\n" +
	"\forganization\x18\x04 \x01(\tR\forganization\"\xde\x01\n" +
	"\x15HerdTelemetryResponse\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12>\n" +
	"\x06action\x18\x02 \x01(\x0e2&.v1.fleet_manager.HerdTelemetryActionsR\x06action\x12\x12\n" +
	"\x04data\x18\x03 \x01(\tR\x04data\x12\x16\n" +
	"\x06status\x18\x04 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x05 \x01(\tR\amessage\x12\"\n" +
	"\forganization\x18\x06 \x01(\tR\forganization\"c\n" +
	"\x12HealthCheckRequest\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12\x16\n" +
	"\x06status\x18\x05 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\"d\n" +
	"\x13HealthCheckResponse\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12\x16\n" +
	"\x06status\x18\x05 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\"\x91\x02\n" +
	"\x13DockerTelemetryData\x12\x10\n" +
	"\x03cpu\x18\x01 \x01(\x01R\x03cpu\x12\x16\n" +
	"\x06memory\x18\x02 \x01(\x01R\x06memory\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12!\n" +
	"\fcontainer_id\x18\x04 \x01(\tR\vcontainerId\x12 \n" +
	"\fnum_of_procs\x18\x06 \x01(\x04R\n" +
	"numOfProcs\x12\x1f\n" +
	"\vcurrent_pid\x18\a \x01(\x04R\n" +
	"currentPid\x12\x1d\n" +
	"\n" +
	"created_at\x18\b \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\t \x01(\tR\tupdatedAt\x12\x18\n" +
	"\aversion\x18\v \x01(\tR\aversion\"g\n" +
	"\x16DockerTelemetryRequest\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xa3\x01\n" +
	"\x17DockerTelemetryResponse\x12\x1b\n" +
	"\tslug_name\x18\x01 \x01(\tR\bslugName\x129\n" +
	"\x04data\x18\x02 \x01(\v2%.v1.fleet_manager.DockerTelemetryDataR\x04data\x12\x16\n" +
	"\x06status\x18\x03 \x01(\bR\x06status\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage*\xe5\x01\n" +
	"\x15CommandStreamCommands\x12\x1a\n" +
	"\x16COMMAND_STREAM_UNKNOWN\x10\x00\x12\x10\n" +
	"\fFLOW_EXECUTE\x10\x01\x12\x0f\n" +
	"\vFLOW_CANCEL\x10\x02\x12\x0e\n" +
	"\n" +
	"ROBOT_LIST\x10\x03\x12\x0f\n" +
	"\vGET_CONFIGS\x10\x04\x12\x0e\n" +
	"\n" +
	"NAVIGATION\x10\x05\x12\v\n" +
	"\aTRIGGER\x10\x06\x12\t\n" +
	"\x05BLOCK\x10\a\x12\x11\n" +
	"\rUPDATE_CONFIG\x10\b\x12\x10\n" +
	"\fLOCALIZATION\x10\t\x12\a\n" +
	"\x03MAP\x10\n" +
	"\x12\b\n" +
	"\x04LANE\x10\v\x12\f\n" +
	"\bSETTINGS\x10\f*\x86\x03\n" +
	"\x14CommandStreamActions\x12\x1a\n" +
	"\x16COMMAND_ACTION_UNKNOWN\x10\x00\x12\x0f\n" +
	"\vCANCEL_GOAL\x10\x01\x12\r\n" +
	"\tSEND_GOAL\x10\x02\x12\b\n" +
	"\x04HOME\x10\x03\x12\v\n" +
	"\aCHARGER\x10\x04\x12\x11\n" +
	"\rGOAT_RESPONSE\x10\x05\x12\x0e\n" +
	"\n" +
	"PAUSE_GOAL\x10\x06\x12\x0f\n" +
	"\vRESUME_GOAL\x10\a\x12\x0f\n" +
	"\vBLOCK_ROBOT\x10\b\x12\x11\n" +
	"\rUNBLOCK_ROBOT\x10\t\x12\x0e\n" +
	"\n" +
	"SWITCH_MAP\x10\n" +
	"\x12\x0e\n" +
	"\n" +
	"UPDATE_MAP\x10\v\x12\v\n" +
	"\aGET_MAP\x10\f\x12\x0e\n" +
	"\n" +
	"BLOCK_LANE\x10\r\x12\x10\n" +
	"\fUNBLOCK_LANE\x10\x0e\x12\x10\n" +
	"\fUPDATE_SPEED\x10\x0f\x12\x0f\n" +
	"\vRESET_SPEED\x10\x10\x12\x11\n" +
	"\rUPDATE_VOLUME\x10\x11\x12\x0f\n" +
	"\vUPDATE_GOAL\x10\x12\x12\x15\n" +
	"\x11UPDATE_NAVIGATION\x10\x13\x12\x16\n" +
	"\x12UPDATE_CUSTOM_TASK\x10\x14*l\n" +
	"\vHerdActions\x12\x17\n" +
	"\x13HERD_ACTION_UNKNOWN\x10\x00\x12\n" +
	"\n" +
	"\x06CREATE\x10\x01\x12\n" +
	"\n" +
	"\x06UPDATE\x10\x02\x12\n" +
	"\n" +
	"\x06DELETE\x10\x03\x12\t\n" +
	"\x05START\x10\x04\x12\b\n" +
	"\x04STOP\x10\x05\x12\v\n" +
	"\aRESTART\x10\x06*Y\n" +
	"\x14HerdTelemetryActions\x12\x1a\n" +
	"\x16HERD_TELEMETRY_UNKNOWN\x10\x00\x12\x10\n" +
	"\fFLEET_STATES\x10\x01\x12\x13\n" +
	"\x0fDISAPTCH_STATES\x10\x022\xfc\x04\n" +
	"\fFleetManager\x12g\n" +
	"\x11HerdCommandStream\x12%.v1.fleet_manager.CommandSteamRequest\x1a%.v1.fleet_manager.CommandSteamRespose\"\x00(\x010\x01\x12]\n" +
	"\fHerdServices\x12$.v1.fleet_manager.HerdServiceRequest\x1a%.v1.fleet_manager.HerdServiceResponse\"\x00\x12h\n" +
	"\x12HerdRobotTelemetry\x12$.v1.fleet_manager.RobotTelemetryData\x1a(.v1.fleet_manager.RobotTelemetryResponse\"\x000\x01\x12c\n" +
	"\rHerdTelemetry\x12%.v1.fleet_manager.HerdTelemetryReqest\x1a'.v1.fleet_manager.HerdTelemetryResponse\"\x00(\x01\x12d\n" +
	"\x0fHerdHealthCheck\x12$.v1.fleet_manager.HealthCheckRequest\x1a%.v1.fleet_manager.HealthCheckResponse\"\x00(\x010\x01\x12o\n" +
	"\x14DockerStatsTelemetry\x12(.v1.fleet_manager.DockerTelemetryRequest\x1a).v1.fleet_manager.DockerTelemetryResponse\"\x000\x01BAZ?github.com/GOAT-Robotics/gtstudio-proto/protos/v1/fleet_managerb\x06proto3"

var (
	file_proto_v1_fleet_manager_fleet_manager_proto_rawDescOnce sync.Once
	file_proto_v1_fleet_manager_fleet_manager_proto_rawDescData []byte
)

func file_proto_v1_fleet_manager_fleet_manager_proto_rawDescGZIP() []byte {
	file_proto_v1_fleet_manager_fleet_manager_proto_rawDescOnce.Do(func() {
		file_proto_v1_fleet_manager_fleet_manager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_v1_fleet_manager_fleet_manager_proto_rawDesc), len(file_proto_v1_fleet_manager_fleet_manager_proto_rawDesc)))
	})
	return file_proto_v1_fleet_manager_fleet_manager_proto_rawDescData
}

var file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_proto_v1_fleet_manager_fleet_manager_proto_goTypes = []any{
	(CommandStreamCommands)(0),      // 0: v1.fleet_manager.CommandStreamCommands
	(CommandStreamActions)(0),       // 1: v1.fleet_manager.CommandStreamActions
	(HerdActions)(0),                // 2: v1.fleet_manager.HerdActions
	(HerdTelemetryActions)(0),       // 3: v1.fleet_manager.HerdTelemetryActions
	(*CommandSteamRequest)(nil),     // 4: v1.fleet_manager.CommandSteamRequest
	(*CommandSteamRespose)(nil),     // 5: v1.fleet_manager.CommandSteamRespose
	(*HerdData)(nil),                // 6: v1.fleet_manager.HerdData
	(*HerdServiceRequest)(nil),      // 7: v1.fleet_manager.HerdServiceRequest
	(*HerdServiceResponseData)(nil), // 8: v1.fleet_manager.HerdServiceResponseData
	(*HerdServiceResponse)(nil),     // 9: v1.fleet_manager.HerdServiceResponse
	(*RobotTelemetryData)(nil),      // 10: v1.fleet_manager.RobotTelemetryData
	(*RobotTelemetryResponse)(nil),  // 11: v1.fleet_manager.RobotTelemetryResponse
	(*HerdTelemetryReqest)(nil),     // 12: v1.fleet_manager.HerdTelemetryReqest
	(*HerdTelemetryResponse)(nil),   // 13: v1.fleet_manager.HerdTelemetryResponse
	(*HealthCheckRequest)(nil),      // 14: v1.fleet_manager.HealthCheckRequest
	(*HealthCheckResponse)(nil),     // 15: v1.fleet_manager.HealthCheckResponse
	(*DockerTelemetryData)(nil),     // 16: v1.fleet_manager.DockerTelemetryData
	(*DockerTelemetryRequest)(nil),  // 17: v1.fleet_manager.DockerTelemetryRequest
	(*DockerTelemetryResponse)(nil), // 18: v1.fleet_manager.DockerTelemetryResponse
}
var file_proto_v1_fleet_manager_fleet_manager_proto_depIdxs = []int32{
	0,  // 0: v1.fleet_manager.CommandSteamRequest.command:type_name -> v1.fleet_manager.CommandStreamCommands
	1,  // 1: v1.fleet_manager.CommandSteamRequest.action:type_name -> v1.fleet_manager.CommandStreamActions
	0,  // 2: v1.fleet_manager.CommandSteamRespose.command:type_name -> v1.fleet_manager.CommandStreamCommands
	1,  // 3: v1.fleet_manager.CommandSteamRespose.action:type_name -> v1.fleet_manager.CommandStreamActions
	2,  // 4: v1.fleet_manager.HerdServiceRequest.action:type_name -> v1.fleet_manager.HerdActions
	6,  // 5: v1.fleet_manager.HerdServiceRequest.data:type_name -> v1.fleet_manager.HerdData
	8,  // 6: v1.fleet_manager.HerdServiceResponse.data:type_name -> v1.fleet_manager.HerdServiceResponseData
	3,  // 7: v1.fleet_manager.HerdTelemetryReqest.action:type_name -> v1.fleet_manager.HerdTelemetryActions
	3,  // 8: v1.fleet_manager.HerdTelemetryResponse.action:type_name -> v1.fleet_manager.HerdTelemetryActions
	16, // 9: v1.fleet_manager.DockerTelemetryResponse.data:type_name -> v1.fleet_manager.DockerTelemetryData
	4,  // 10: v1.fleet_manager.FleetManager.HerdCommandStream:input_type -> v1.fleet_manager.CommandSteamRequest
	7,  // 11: v1.fleet_manager.FleetManager.HerdServices:input_type -> v1.fleet_manager.HerdServiceRequest
	10, // 12: v1.fleet_manager.FleetManager.HerdRobotTelemetry:input_type -> v1.fleet_manager.RobotTelemetryData
	12, // 13: v1.fleet_manager.FleetManager.HerdTelemetry:input_type -> v1.fleet_manager.HerdTelemetryReqest
	14, // 14: v1.fleet_manager.FleetManager.HerdHealthCheck:input_type -> v1.fleet_manager.HealthCheckRequest
	17, // 15: v1.fleet_manager.FleetManager.DockerStatsTelemetry:input_type -> v1.fleet_manager.DockerTelemetryRequest
	5,  // 16: v1.fleet_manager.FleetManager.HerdCommandStream:output_type -> v1.fleet_manager.CommandSteamRespose
	9,  // 17: v1.fleet_manager.FleetManager.HerdServices:output_type -> v1.fleet_manager.HerdServiceResponse
	11, // 18: v1.fleet_manager.FleetManager.HerdRobotTelemetry:output_type -> v1.fleet_manager.RobotTelemetryResponse
	13, // 19: v1.fleet_manager.FleetManager.HerdTelemetry:output_type -> v1.fleet_manager.HerdTelemetryResponse
	15, // 20: v1.fleet_manager.FleetManager.HerdHealthCheck:output_type -> v1.fleet_manager.HealthCheckResponse
	18, // 21: v1.fleet_manager.FleetManager.DockerStatsTelemetry:output_type -> v1.fleet_manager.DockerTelemetryResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_v1_fleet_manager_fleet_manager_proto_init() }
func file_proto_v1_fleet_manager_fleet_manager_proto_init() {
	if File_proto_v1_fleet_manager_fleet_manager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_v1_fleet_manager_fleet_manager_proto_rawDesc), len(file_proto_v1_fleet_manager_fleet_manager_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_v1_fleet_manager_fleet_manager_proto_goTypes,
		DependencyIndexes: file_proto_v1_fleet_manager_fleet_manager_proto_depIdxs,
		EnumInfos:         file_proto_v1_fleet_manager_fleet_manager_proto_enumTypes,
		MessageInfos:      file_proto_v1_fleet_manager_fleet_manager_proto_msgTypes,
	}.Build()
	File_proto_v1_fleet_manager_fleet_manager_proto = out.File
	file_proto_v1_fleet_manager_fleet_manager_proto_goTypes = nil
	file_proto_v1_fleet_manager_fleet_manager_proto_depIdxs = nil
}
